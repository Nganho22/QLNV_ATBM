
--tao role nhan vien
SET SERVEROUTPUT ON;

ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

--tao role nhan vien
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_NHANVIEN';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_NHANVIEN;

--tao role quan ly truc tiep
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_QLTRUCTIEP';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_QLTRUCTIEP;

--tao role truong phong
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_TRUONGPHONG';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_TRUONGPHONG;

--tao role tai chinh
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_TAICHINH';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_TAICHINH;

--tao role nhan su
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_NHANSU';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_NHANSU;

--tao role nhan su
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_TRUONGDEAN';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_TRUONGDEAN;

--tao role nhan su
BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_BANGIAMDOC';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_BANGIAMDOC;

BEGIN
EXECUTE IMMEDIATE 'DROP ROLE'||' DA_RL_QUANTRIVIEN';
EXCEPTION
WHEN OTHERS THEN
      IF SQLCODE != -1919 THEN
         RAISE;
      END IF;
END;
/
CREATE ROLE DA_RL_QUANTRIVIEN;

GRANT DA_RL_NHANVIEN TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_QLTRUCTIEP TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_TRUONGPHONG TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_TAICHINH TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_NHANSU TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_TRUONGDEAN TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;
GRANT DA_RL_BANGIAMDOC TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION;

CREATE OR REPLACE PROCEDURE usp_CREATE_USER
AS
    BEGIN 
    
     FOR rec IN (SELECT  NV.MANV FROM DA_TABLE_NHANVIEN NV, ALL_USERS US WHERE US.USERNAME = NV.MaNV) LOOP
                EXECUTE IMMEDIATE  'DROP USER ' || rec.MaNV;
        END LOOP;
        FOR rec IN (SELECT  MANV, VAITRO FROM DA_TABLE_NHANVIEN) LOOP
                EXECUTE IMMEDIATE  'CREATE USER ' || rec.MANV || ' IDENTIFIED BY 123';
                EXECUTE IMMEDIATE 'GRANT CONNECT TO ' ||rec.MANV;
               EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' ||rec.MANV;
               EXECUTE IMMEDIATE 'GRANT DA_RL_NHANVIEN TO ' ||rec.MANV;
              IF rec.VAITRO LIKE 'QUAN LY'
                THEN 
                    EXECUTE IMMEDIATE 'GRANT DA_RL_QLTRUCTIEP TO ' ||rec.MANV;
             END IF;
            IF rec.VAITRO LIKE 'TRUONG PHONG'
                THEN 
                    EXECUTE IMMEDIATE 'GRANT DA_RL_TRUONGPHONG TO ' ||rec.MANV;
             END IF;
            IF rec.VAITRO LIKE 'TAI CHINH'
                THEN 
            EXECUTE IMMEDIATE 'GRANT DA_RL_TAICHINH TO ' ||rec.MANV;
             END IF;
             IF rec.VAITRO LIKE 'NHAN SU'
                THEN 
                    EXECUTE IMMEDIATE 'GRANT DA_RL_NHANSU TO ' ||rec.MANV;
             END IF;
            IF rec.VAITRO LIKE 'TRUONG DE AN'
                THEN 
                    EXECUTE IMMEDIATE 'GRANT DA_RL_TRUONGDEAN TO ' ||rec.MANV;
             END IF;
            IF rec.VAITRO LIKE 'BAN GIAM DOC' OR  rec.VAITRO LIKE 'TONG GIAM DOC'
                THEN 
                    EXECUTE IMMEDIATE 'GRANT DA_RL_BANGIAMDOC TO ' ||rec.MANV;
             END IF;
        END LOOP;
    END usp_CREATE_USER;
/
EXECUTE usp_CREATE_USER;

GRANT SELECT ANY DICTIONARY TO DA_RL_QUANTRIVIEN;

 CREATE OR REPLACE PROCEDURE SEE_USER( P_DS_NGDUNG OUT SYS_REFCURSOR)
IS
    BEGIN
        OPEN P_DS_NGDUNG FOR
        SELECT USERNAME, DBA_ROLE_PRIVS.GRANTED_ROLE FROM SYS.DBA_ROLE_PRIVS, SYS.DBA_USERS
        WHERE GRANTED_ROLE  LIKE 'DA_RL%' AND GRANTEE = USERNAME;
    END SEE_USER;
/

GRANT EXECUTE ON SEE_USER TO DA_RL_QUANTRIVIEN;
------XEM DANH SACH CAC ROLE TRONG HE THONG
CREATE OR REPLACE PROCEDURE SEE_ROLE( P_DS_ROLE OUT SYS_REFCURSOR)
IS
    BEGIN
        OPEN P_DS_ROLE FOR
        SELECT * FROM NGAN.DA_TABLE_NHANVIEN;
     /*   SELECT ROLE FROM SYS.DBA_ROLES
        WHERE ROLE LIKE 'DA_RL%';*/
    END SEE_ROLE;
/
GRANT EXECUTE ON SEE_ROLE TO DA_RL_QUANTRIVIEN;
/*
GRANT ALL ON DA_TABLE_DEAN TO DA_RL_QUANTRIVIEN;
GRANT ALL ON DA_TABLE_NHANVIEN TO DA_RL_QUANTRIVIEN;
GRANT ALL ON DA_TABLE_PHANCONG TO DA_RL_QUANTRIVIEN;
GRANT ALL ON DA_TABLE_PHONGBAN TO DA_RL_QUANTRIVIEN;*/
----XEM DANH SACH CAC TABLE TRONG HE THONG---
CREATE OR REPLACE PROCEDURE SEE_TABLE( P_DS_TABLE OUT SYS_REFCURSOR)
IS
    BEGIN
        OPEN P_DS_TABLE FOR
        SELECT TABLE_NAME FROM USER_TABLES where TABLE_NAME != 'DA_TABLE_TEMP' AND TABLE_NAME LIKE 'DA_TABLE%';
    END SEE_TABLE;
/
GRANT EXECUTE ON SEE_TABLE TO DA_RL_QUANTRIVIEN;
----XEM DANH SACH CAC VIEWS TRONG HE THONG---
CREATE OR REPLACE PROCEDURE SEE_VIEW( P_DS_VIEW OUT SYS_REFCURSOR)
IS
    BEGIN
        OPEN P_DS_VIEW FOR
        SELECT VIEW_NAME, TEXT FROM SYS.DBA_VIEWS
        WHERE VIEW_NAME LIKE 'DA_VIEW_%';
    END SEE_VIEW;
/
GRANT EXECUTE ON SEE_VIEW TO DA_RL_QUANTRIVIEN;
-------XEM QUYEN USER/ ROLE CU THE TREN TABLE
CREATE OR REPLACE PROCEDURE SEE_USER_ROLE_PRIVS (USER_NAME IN VARCHAR2,PRIVS_USER OUT SYS_REFCURSOR, PRIVS_USER_ROLE OUT SYS_REFCURSOR)
IS
    BEGIN
        OPEN PRIVS_USER FOR
        SELECT PR.PRIVILEGE, PR.TABLE_NAME, 'ALL' AS COLUMN_NAME, 'NULL' AS GRANTED_ROLE FROM SYS.USER_TAB_PRIVS PR WHERE GRANTEE = USER_NAME;
        OPEN PRIVS_USER_ROLE FOR
        SELECT R.PRIVILEGE, R.TABLE_NAME,R.COLUMN_NAME, RMB.GRANTED_ROLE  FROM SYS.ROLE_TAB_PRIVS R,  SYS.DBA_ROLE_PRIVS RMB WHERE R.ROLE =  RMB.GRANTED_ROLE  AND RMB.GRANTEE = USER_NAME;
    END SEE_USER_ROLE_PRIVS;
/

GRANT EXECUTE ON SEE_USER_ROLE_PRIVS TO DA_RL_QUANTRIVIEN;
--- TAO TABLE
GRANT CREATE TABLE TO DA_RL_QUANTRIVIEN;
GRANT ALTER ANY INDEX TO DA_RL_QUANTRIVIEN;


CREATE OR REPLACE PROCEDURE CREATE_TABLE(TABLE_NAME3 IN VARCHAR2, COLUMN_NAME IN VARCHAR2, COLUMN_TYPE IN VARCHAR2, T OUT VARCHAR)
IS
        L_COUNT NUMBER;
    BEGIN
    SELECT COUNT(TABLE_NAME) INTO L_COUNT FROM SYS.ALL_TABLES
     WHERE TABLE_NAME = TABLE_NAME3;
    IF L_COUNT = 0 AND TABLE_NAME3 LIKE 'DA_TABLE_%'
    THEN
           EXECUTE IMMEDIATE 'CREATE TABLE '|| TABLE_NAME3 || ' ( ' || COLUMN_NAME || ' '|| COLUMN_TYPE ||' )';
           EXECUTE IMMEDIATE 'GRANT ALL ON '|| TABLE_NAME3 || ' TO DA_RL_QUANTRIVIEN ';
           T := 'THANH CONG';
    ELSE
             T:= 'THAT BAI. BANG DA TON TAI HOAC DAT TEN SAI NGUYEN TAC';
    END IF;
    END CREATE_TABLE;
/
GRANT EXECUTE ON CREATE_TABLE TO DA_RL_QUANTRIVIEN;
-- THEM THUOC TINH VAO BANG
CREATE OR REPLACE PROCEDURE ADD_COLUMN(TABLE_NAMEE IN VARCHAR2, COLUMN_NAMEE IN VARCHAR2, COLUMN_TYPEE IN VARCHAR2, T OUT VARCHAR2, P_COL_TABLE OUT SYS_REFCURSOR)
IS
    L_COUNT NUMBER;
    BEGIN
     SELECT COUNT(TABLE_NAME) INTO L_COUNT FROM USER_TABLES
     WHERE TABLE_NAME = TABLE_NAMEE AND COLUMN_NAMEE NOT IN ( SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = TABLE_NAMEE);
    IF L_COUNT != 0
    THEN
        EXECUTE IMMEDIATE 'ALTER TABLE '|| TABLE_NAMEE || ' ADD ' || COLUMN_NAMEE || ' '|| COLUMN_TYPEE;
        T := 'THANH CONG';
    ELSE 
         T := 'THAT BAI';
    END IF;
    OPEN P_COL_TABLE FOR
   SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = TABLE_NAMEE;
    END ADD_COLUMN;
/
GRANT EXECUTE ON ADD_COLUMN TO DA_RL_QUANTRIVIEN;
--TAO VIEW
GRANT CREATE VIEW TO DA_RL_QUANTRIVIEN;

CREATE OR REPLACE PROCEDURE CREATE_VIEW ( VIEW_NAMEE IN VARCHAR2, VIEW_QUERYY IN VARCHAR2, T OUT VARCHAR2,  P_DS_VIEW OUT SYS_REFCURSOR)
IS
        L_COUNT NUMBER;
    BEGIN
    SELECT COUNT(VIEW_NAME) INTO L_COUNT FROM SYS.ALL_VIEWS WHERE VIEW_NAME = VIEW_NAMEE;
    IF L_COUNT = 0 AND VIEW_NAMEE LIKE 'DA_VIEW_%'
    THEN
         EXECUTE IMMEDIATE 'CREATE VIEW '|| VIEW_NAMEE || ' AS ' || VIEW_QUERYY;
          --EXECUTE IMMEDIATE 'GRANT SELECT ON '|| VIEW_NAMEE || ' TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION';
        T := 'THANH CONG';
    ELSE
        T := 'THAT BAI';
    END IF;
     OPEN P_DS_VIEW FOR
        SELECT VIEW_NAME, OWNER, TEXT FROM SYS.DBA_VIEWS
        WHERE VIEW_NAME = VIEW_NAMEE;
    END CREATE_VIEW;
/
GRANT EXECUTE ON CREATE_VIEW TO DA_RL_QUANTRIVIEN;

---TAO ROLE---
GRANT CREATE ROLE TO DA_RL_QUANTRIVIEN;

CREATE OR REPLACE PROCEDURE CREATE_ROLEE ( ROLE_NAMEE IN VARCHAR2,T OUT VARCHAR2, P_ROLE OUT SYS_REFCURSOR)
IS
    L_COUNT NUMBER;
    BEGIN
    SELECT COUNT(ROLE) INTO L_COUNT FROM SYS.DBA_ROLES WHERE ROLE = ROLE_NAMEE;
    IF L_COUNT = 0 AND ROLE_NAMEE LIKE 'DA_RL%'
    THEN
         EXECUTE IMMEDIATE 'CREATE ROLE '|| ROLE_NAMEE;
         EXECUTE IMMEDIATE 'GRANT '|| ROLE_NAMEE ||' TO DA_RL_QUANTRIVIEN WITH ADMIN OPTION';
        T := 'THANH CONG';
    ELSE
        T := 'THAT BAI';
    END IF;
   OPEN P_ROLE FOR
    SELECT ROLE_ID, ROLE FROM SYS.DBA_ROLES
    WHERE ROLE = ROLE_NAMEE;
    END CREATE_ROLEE;
/


GRANT EXECUTE ON CREATE_ROLEE TO DA_RL_QUANTRIVIEN;
--TAO USER---
GRANT CREATE USER TO DA_RL_QUANTRIVIEN;
GRANT ALTER USER TO DA_RL_QUANTRIVIEN;

CREATE OR REPLACE PROCEDURE CREATE_USERR ( USERR_NAMEE IN VARCHAR2, PW IN VARCHAR2,T OUT VARCHAR2,  TT_USER OUT SYS_REFCURSOR)
IS
    L_COUNT NUMBER;
    PWS VARCHAR2(300);
    BEGIN
    SELECT COUNT(USERNAME) INTO L_COUNT FROM SYS.DBA_USERS WHERE USERNAME = USERR_NAMEE;
    PWS := PW;
    IF PWS = ''
    THEN
        PWS := '123';
    END IF;
    IF L_COUNT = 0
    THEN
        
        EXECUTE IMMEDIATE  'CREATE USER ' || USERR_NAMEE || ' IDENTIFIED BY '|| PWS;
        EXECUTE IMMEDIATE 'GRANT CONNECT TO ' ||USERR_NAMEE;
        EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' || USERR_NAMEE;
        EXECUTE IMMEDIATE 'GRANT DA_RL_NHANVIEN TO ' ||USERR_NAMEE;
        T := 'THANH CONG';
    ELSE
        T := 'THAT BAI';
    END IF;
    OPEN TT_USER FOR
        SELECT USER_ID, USERNAME, ACCOUNT_STATUS, CREATED
        FROM SYS.DBA_USERS WHERE USERNAME = USERR_NAMEE;
    END CREATE_USERR;
/
GRANT EXECUTE ON CREATE_USERR TO DA_RL_QUANTRIVIEN;
--CAP ROLE CHO USER---
CREATE OR REPLACE PROCEDURE GRANT_ROLE_TO_USER( U IN VARCHAR2, R IN VARCHAR2,Q IN VARCHAR2,T OUT VARCHAR2,  P_DS_ROLE OUT SYS_REFCURSOR)
IS
   M VARCHAR2(2000);
   L_COUNT_U NUMBER;
   L_COUNT_R NUMBER;
    BEGIN
    SELECT COUNT(USERNAME) INTO L_COUNT_U FROM SYS.DBA_USERS WHERE USERNAME = U;
    SELECT COUNT(GRANTED_ROLE) INTO L_COUNT_R FROM USER_ROLE_PRIVS WHERE GRANTED_ROLE  = R;
    IF L_COUNT_U = 1 AND L_COUNT_R = 1
    THEN
        M :=   'GRANT  ' || R || ' TO '|| U || Q;
        EXECUTE IMMEDIATE M;
        T := 'THANH CONG';
    ELSE
        T := 'THAT BAI';
    END IF;
     OPEN P_DS_ROLE FOR
    SELECT GRANTED_ROLE, ADMIN_OPTION
    FROM SYS.DBA_ROLE_PRIVS
    WHERE GRANTEE = U;
    END GRANT_ROLE_TO_USER;
/
GRANT EXECUTE ON GRANT_ROLE_TO_USER TO DA_RL_QUANTRIVIEN;
--- CAP QUYEN CHO USER/ROLE----
CREATE OR REPLACE PROCEDURE GRANT_PRIV_TO_USER( USERR_NAMEE IN VARCHAR2, PRIVS IN VARCHAR2,TABLE_NAMEE IN VARCHAR2,OPTIONT IN VARCHAR2, T OUT VARCHAR2 )
IS
   M VARCHAR2(2000);
   L_COUNT_U NUMBER;
   L_COUNT_R NUMBER;
   L_COUNT_T NUMBER;
   L_COUNT_P NUMBER;
    BEGIN
    SELECT COUNT(USERNAME) INTO L_COUNT_U FROM SYS.DBA_USERS WHERE USERNAME = USERR_NAMEE;
    SELECT COUNT(ROLE) INTO L_COUNT_R FROM SYS.DBA_ROLES WHERE ROLE = USERR_NAMEE;
    SELECT COUNT(TABLE_NAME) INTO L_COUNT_T FROM SYS.ALL_TABLES WHERE TABLE_NAME = TABLE_NAMEE;
    SELECT COUNT(PRIVILEGE) INTO L_COUNT_P FROM USER_SYS_PRIVS WHERE PRIVILEGE = PRIVS;
    IF L_COUNT_U = 1 OR  L_COUNT_R = 1
    THEN
        IF L_COUNT_T = 1 AND (PRIVS = 'SELECT' OR PRIVS = 'INSERT' OR PRIVS = 'UPDATE'
                                                                                                    OR PRIVS = 'DELETE' OR PRIVS = 'REFERENCES' OR PRIVS = 'ALTER' OR
                                                                                                    PRIVS = 'INDEX' OR PRIVS = 'ALL')
        THEN
            M := 'GRANT ' || PRIVS ||' ON '|| TABLE_NAMEE ||' TO '|| USERR_NAMEE || OPTIONT;
        END IF;
        IF L_COUNT_P != 0
        THEN
             M := 'GRANT ' || PRIVS ||' TO '|| USERR_NAMEE || OPTIONT;
        END IF;
        EXECUTE IMMEDIATE M;
            T:= 'THANH CONG';
        ELSE
            T:= 'THAT BAI';
        END IF;
    END GRANT_PRIV_TO_USER;
/

GRANT EXECUTE ON GRANT_PRIV_TO_USER TO DA_RL_QUANTRIVIEN;
--- HUY QUYEN USER/ ROLE----
GRANT ALL ON DA_TABLE_TEMP TO DA_RL_QUANTRIVIEN;

CREATE OR REPLACE PROCEDURE REVOKE_PRIV( PRIV IN VARCHAR2, TABLE_NAMEE IN VARCHAR2, USER_NAMEE IN VARCHAR2, T OUT VARCHAR2)
AS
    L_COUNT NUMBER;
    BEGIN
        INSERT INTO DA_TABLE_TEMP (QUERYY) SELECT PR.PRIVILEGE FROM SYS.USER_TAB_PRIVS PR WHERE GRANTEE = USER_NAMEE AND TABLE_NAME = TABLE_NAMEE AND PRIVILEGE != PRIV;
        SELECT COUNT(QUERYY) INTO L_COUNT FROM DA_TABLE_TEMP;
        IF L_COUNT != 0 AND  (PRIV = 'SELECT' OR PRIV = 'INSERT' OR PRIV = 'UPDATE'
                                                                                                    OR PRIV = 'DELETE' OR PRIV = 'REFERENCES' OR PRIV = 'ALTER' OR
                                                                                                    PRIV = 'INDEX' OR PRIV = 'ALL')
        THEN
            EXECUTE IMMEDIATE 'REVOKE ALL ON '|| TABLE_NAMEE ||' FROM '|| USER_NAMEE;
           FOR R IN (SELECT QUERYY FROM DA_TABLE_TEMP) LOOP
                EXECUTE IMMEDIATE 'GRANT '|| R.QUERYY || ' ON '||TABLE_NAMEE||' TO '|| USER_NAMEE;
           END LOOP;
           T := 'THANH CONG';
        ELSE
            T:= 'THAT BAI';
        END IF;
       EXECUTE IMMEDIATE 'DELETE FROM DA_TABLE_TEMP';
    END REVOKE_PRIV;
/
GRANT EXECUTE ON REVOKE_PRIV TO DA_RL_QUANTRIVIEN;
--- ham xem nguoi dung hien tai
CREATE OR REPLACE PROCEDURE GET_CUR_USER (USER_NAME OUT VARCHAR2)
IS
BEGIN
  SELECT USER INTO USER_NAME FROM DUAL;
END;
/

GRANT EXECUTE ON GET_CUR_USER TO DA_RL_QUANTRIVIEN;
---  DROP BY NGAN
/
CREATE OR REPLACE PROCEDURE DROP_OBJECT (OBJECT_NAME IN VARCHAR2, KIND IN VARCHAR2, MESS OUT VARCHAR2)
AS
    U NUMBER;
BEGIN 
    U := 0;
    IF OBJECT_NAME LIKE 'DA_RL%'  AND OBJECT_NAME != 'DA_RL_TRUONGPHUONG' AND OBJECT_NAME != 'DA_RL_QLTRUCTIEP' AND OBJECT_NAME != 'DA_RL_NHANVIEN' AND OBJECT_NAME != 'DA_RL_TAICHINH' AND 
                                                            OBJECT_NAME != 'DA_RL_NHANSU' AND OBJECT_NAME != 'TRUONGDEAN' AND OBJECT_NAME != 'DA_RL_BANGIAMDOC' AND OBJECT_NAME != 'DA_RL_QUANTRIVIEN' AND KIND = 'ROLE'
    THEN
        FOR R IN (SELECT ROLE FROM SYS.DBA_ROLES WHERE ROLE = OBJECT_NAME) LOOP
                EXECUTE IMMEDIATE 'DROP ROLE '|| OBJECT_NAME;
                U := U + 1;
           END LOOP;
    ELSIF OBJECT_NAME LIKE 'DA_TABLE_%'  AND OBJECT_NAME != 'DA_TABLE_NHANVIEN' AND OBJECT_NAME != 'DA_TABLE_PHONGBAN' AND OBJECT_NAME != 'DA_TABLE_DEAN' AND OBJECT_NAME != 'DA_TABLE_PHANCONG' AND 
                                                            OBJECT_NAME != 'DA_TABLE_TEMP' AND KIND = 'TABLE'
    THEN
        FOR R IN (SELECT TABLE_NAME FROM USER_TABLES WHERE TABLE_NAME = OBJECT_NAME) LOOP
                EXECUTE IMMEDIATE 'DROP TABLE '|| OBJECT_NAME;
                U := U + 1;
           END LOOP;
      ELSIF OBJECT_NAME LIKE 'DA_VIEW_%' AND KIND = 'VIEW'
    THEN
        FOR R IN ( SELECT VIEW_NAME FROM SYS.DBA_VIEWS WHERE VIEW_NAME = OBJECT_NAME) LOOP
                EXECUTE IMMEDIATE 'DROP VIEW '|| OBJECT_NAME;
                U := U + 1;
           END LOOP;
    ELSIF KIND = 'USER' 
    THEN
        FOR R IN ( SELECT DISTINCT USERNAME FROM SYS.DBA_ROLE_PRIVS , SYS.DBA_USERS 
        WHERE GRANTED_ROLE !=  'DA_RL_QUANTRIVIEN' AND GRANTED_ROLE LIKE  'DA_RL%' AND GRANTEE = OBJECT_NAME AND GRANTEE = USERNAME) LOOP
                EXECUTE IMMEDIATE 'DROP USER '|| OBJECT_NAME;
                U := U + 1;
           END LOOP;
    END IF;
    IF U != 0
    THEN
    MESS := 'THANH CONG';
    ELSE
    MESS := 'THAT BAI';
    END IF;
END DROP_OBJECT;
/

CREATE OR REPLACE PROCEDURE CHECK_PRIV(PROC IN VARCHAR2, MESS OUT VARCHAR2)
AS
    U NUMBER;
    U2 NUMBER;
    USERR_NAME VARCHAR2(50);
BEGIN 
    SELECT USER INTO USERR_NAME FROM DUAL;
     SELECT COUNT(R.PRIVILEGE) INTO U  FROM SYS.ROLE_TAB_PRIVS R,  SYS.DBA_ROLE_PRIVS RMB WHERE R.ROLE =  RMB.GRANTED_ROLE  AND RMB.GRANTEE = USERR_NAME AND TABLE_NAME = PROC AND PRIVILEGE = 'EXECUTE';
     SELECT COUNT(PR.PRIVILEGE) INTO U2 FROM SYS.USER_TAB_PRIVS PR WHERE GRANTEE = USERR_NAME AND TABLE_NAME = PROC AND PRIVILEGE = 'EXECUTE';
     IF U = 1 OR U2 = 1
     THEN
        MESS := 'YES';
    ELSE
        MESS := 'NO';
    END IF;
END CHECK_PRIV;
/
GRANT EXECUTE ON CHECK_PRIV TO DA_RL_QUANTRIVIEN;


